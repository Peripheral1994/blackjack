// Generated by CoffeeScript 1.9.3
var extend = function(child, parent) { for (var key in parent) { if (hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
  hasProp = {}.hasOwnProperty;

window.App = (function(superClass) {
  extend(App, superClass);

  function App() {
    return App.__super__.constructor.apply(this, arguments);
  }

  App.prototype.initialize = function() {
    var deck;
    this.playerMoney = 1000;
    this.bet = 0;
    this.set('deck', deck = new Deck());
    return this.dealHands();
  };

  App.prototype.endGame = function() {
    var dHand, pHand;
    dHand = this.get('dealerHand').maxScore();
    pHand = this.get('playerHand').maxScore();
    if (pHand === 21 && this.get('playerHand').length === 2) {
      return $('h2').text('Player Blackjack!');
    } else {
      if (dHand > pHand) {
        $('h2').text('Dealer Wins!');
      }
      if (dHand < pHand) {
        $('h2').text('Player Wins!');
        this.playerMoney += this.bet * 2;
      }
      if (dHand === pHand) {
        $('h2').text('You Push!');
        return this.playerMoney += this.bet;
      }
    }
  };

  App.prototype.newGame = function() {
    var deck;
    $('body').css({
      'background-color': 'white'
    });
    if (this.get('deck').length > 15) {
      return this.dealHands();
    } else {
      alert('Deck is too small, shuffling!');
      this.set('deck', deck = new Deck());
      return this.dealHands();
    }
  };

  App.prototype.dealHands = function() {
    this.makeBet();
    this.set('playerHand', this.get('deck').dealPlayer());
    this.set('dealerHand', this.get('deck').dealDealer());
    this.get('dealerHand').on('endGame', this.endGame, this);
    return this.get('playerHand').on('newGame', this.newGame, this);
  };

  App.prototype.makeBet = function() {
    this.bet = parseInt(prompt("How much money would you like to bet? You have " + this.playerMoney + " dollars."));
    if (typeof this.bet === "number") {
      if (this.bet > this.playerMoney) {
        alert('You don\'t have that much money. Please try again!');
        return this.makeBet();
      } else {
        return this.playermoney -= this.bet;
      }
    }
  };

  return App;

})(Backbone.Model);
